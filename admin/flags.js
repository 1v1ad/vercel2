// admin/flags.js
(function () {
  function ccToFlag(cc) {
    if (!cc) return "";
    const s = String(cc).trim().toUpperCase();
    if (s.length !== 2) return s; // –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ ISO2 ‚Äî –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å
    // 'DE' -> 'üá©' + 'üá™' (Regional Indicator Symbols)
    return s.replace(/./g, ch => String.fromCodePoint(0x1F1E6 + (ch.charCodeAt(0) - 65)));
  }

  // —É–∫—Ä–∞—à–∞–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å [data-cc] –≤–Ω—É—Ç—Ä–∏ root (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é document)
  function decorateFlags(root = document) {
    const nodes = root.querySelectorAll("[data-cc]");
    nodes.forEach(el => {
      const cc = (el.getAttribute("data-cc") || "").trim().toUpperCase();
      if (!cc) { el.textContent = ""; return; }

      const emoji = ccToFlag(cc);
      // –í–ê–ñ–ù–û: inline-—Å—Ç–∏–ª–∏ –≤—ã–∫–ª—é—á–∞—é—Ç –ª—é–±—ã–µ transform —É –ø—Ä–µ–¥–∫–æ–≤
      el.innerHTML =
        `<span class="flag-emoji" style="text-transform:none; font-family:'Apple Color Emoji','Segoe UI Emoji','Noto Color Emoji',system-ui,sans-serif">${emoji || ""}</span>` +
        ` <span class="cc" style="text-transform:none">${cc}</span>`;
    });
  }

  // –ø–µ—Ä–≤—ã–π –ø—Ä–æ–≥–æ–Ω
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", () => decorateFlags());
  } else {
    decorateFlags();
  }

  // —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞
  window.decorateFlags = decorateFlags;
})();
